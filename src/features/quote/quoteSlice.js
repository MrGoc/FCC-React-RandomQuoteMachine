import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

const initialState = {
  quote: {
    author: "",
    content: "",
  },
  status: "idle",
};

export const getRandomQuoteAsync = createAsyncThunk(
  "quote/random",
  async (quote) => {
    const response = await fetch("https://api.quotable.io/random").then(
      (data) => data.json()
    );
    // The value we return becomes the `fulfilled` action payload
    return response;
  }
);

export const quoteSlice = createSlice({
  name: "quote",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(getRandomQuoteAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(getRandomQuoteAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.quote = action.payload;
      });
  },
});

export const selectQuote = (state) => state.quote.quote;

export default quoteSlice.reducer;
